/*!
 * algorithm - Algorithm visualization library v0.3.0
 * Copyright (c) 2015-2017 TSV  - http://github.com/tsv2013/algorithm
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i(require("jquery"),require("knockout")):"function"==typeof define&&define.amd?define("algorithm",["jquery","knockout"],i):"object"==typeof exports?exports.algorithm=i(require("jquery"),require("knockout")):t.algorithm=i(t.jQuery,t.ko)}(this,function(t,i){return function(t){function i(e){if(n[e])return n[e].exports;var o=n[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var n={};return i.m=t,i.c=n,i.i=function(t){return t},i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:e})},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=7)}([function(i,n){i.exports=t},function(t,n){t.exports=i},function(t,i){},function(t,i){t.exports='<script type="text/html" id="algorithm-view-template">\r\n    <!-- ko with: $data -->\r\n    <div class="algorithm-view-holder">\r\n        <!-- ko if: addonsTemplate -->\r\n        <div class="algorithm-addons" data-bind="style: { \'width\': addonsWidth() + \'px\' }">\r\n            <!-- ko foreach: blocks -->\r\n            <div class="algorithm-addon-holder" data-bind="style: { \'height\': height() + \'px\', \'marginBottom\': $parent.blockMinDistance() + \'px\' }">\r\n                <!-- ko template: $parent.addonsTemplate -->\r\n                <!-- /ko -->\r\n            </div>\r\n            <!-- /ko -->\r\n        </div>\r\n        <!-- /ko -->\r\n        <div class="algorithm-transitions" data-bind="style: { \'left\': addonsWidth() + \'px\', \'width\': connectorsAreaWidth() + \'px\' }">\r\n            <!-- ko foreach: transitions -->\r\n            <!-- ko template: template -->\r\n            <!-- /ko -->\r\n            <!-- /ko -->\r\n        </div>\r\n        <div class="algorithm-blocks" data-bind="draggableblocks: $data, style: { \'left\': addonsWidth() + connectorsAreaWidth() + \'px\', width: blockWidth() + \'px\' }">\r\n            <!-- ko foreach: blocks -->\r\n            <!-- ko template: template -->\r\n            <!-- /ko -->\r\n            <!-- /ko -->\r\n        </div>\r\n        <div class="algorithm-comments" data-bind="style: { \'top\': -blockMinDistance() + \'px\', \'left\': addonsWidth() + connectorsAreaWidth() + blockWidth() + \'px\', width: commentWidth() + \'px\' }">\r\n            <!-- ko foreach: blocks -->\r\n            <div style="position: relative" data-bind="style: { \'height\': height() + \'px\', \'lineHeight\': height() + \'px\', \'margin\': $parent.blockMinDistance() + \'px 0\' }">\r\n                <!-- ko if: comment -->\r\n                <div style="position:absolute; top: 0; left:0; width: 40px; height: 100%">\r\n                    <svg width="100%" height="100%">\r\n                        <line y1="50%" y2="50%" x1="0%" x2="100%" style="stroke:gray;"></line>\r\n                    </svg>\r\n                </div>\r\n                <div class="algorithm-comment-content">\r\n                    <span data-bind="text: comment"></span>\r\n                </div>\r\n                <!-- /ko -->\r\n            </div>\r\n            <!-- /ko -->\r\n        </div>\r\n        <div class="algorithm-block-details-container" data-bind="algodetails: $data">\r\n        </div>\r\n    </div>\r\n    <!-- /ko -->\r\n</script>\r\n\r\n<script type="text/html" id="algorithm-details-template">\r\n    <div class="algorithm-details-holder">\r\n        <div class="algorithm-details-template-holder">\r\n            <!-- ko template: { name: detailTemplate, data: currentBlock } -->\r\n            <!-- /ko -->\r\n        </div>\r\n        <div class="algorithm-details-actions-holder">\r\n            <div class="algorithm-button" data-bind="click: function() { $data.isEditMode(false); }, text: closeTitle"></div>\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n<script type="text/html" id="algorithm-default-details-template">\r\n    <!-- ko with: $data -->\r\n    <div class="algo-detail-field">\r\n        <span class="algo-detail-label">Text: </span>\r\n        <div class="algo-detail-value-wrapper">\r\n            <input class="algo-detail-value" data-bind="value: text" />\r\n        </div>\r\n    </div>\r\n    <div class="algo-detail-field">\r\n        <span class="algo-detail-label">Comment: </span>\r\n        <div class="algo-detail-value-wrapper">\r\n            <input class="algo-detail-value" data-bind="value: comment" />\r\n        </div>\r\n    </div>\r\n    <div class="algo-detail-field">\r\n        <span class="algo-detail-label">State: </span>\r\n        <div class="algo-detail-value-wrapper">\r\n            <select data-bind="options: [ \'inprogress\', \'completed\' ], value: state, optionsCaption: \'Choose state...\'"></select>\r\n        </div>\r\n    </div>\r\n    <div class="algo-detail-field">\r\n        <span class="algo-detail-label">Is Condition: </span>\r\n        <div class="algo-detail-value-wrapper">\r\n            <input type="checkbox" data-bind="checked: isCondition" />\r\n        </div>\r\n    </div>\r\n    <!-- /ko -->\r\n</script>'},function(t,i){t.exports='<script type="text/html" id="algorithm-block-item-template">\r\n    <div class="algorithm-block algorithm-block-item" data-bind="style: { \'height\': height() + \'px\', \'lineHeight\': height() + \'px\', \'margin\': $parent.blockMinDistance() + \'px 0\' }, css: { \'algorithm-block-inprogress\': state() === \'inprogress\', \'algorithm-block-teminator\': isTerminator }, click: function() { $parent.clickBlock($data); }">\r\n        <div class="algorithm-block-shadow"></div>\r\n        <div class="algorithm-block-content" data-bind="style: { \'lineHeight\': height() + \'px\' }, text: text"></div>\r\n        <!-- ko if: num() -->\r\n        <div class="algorithm-block-num" data-bind="text: num"></div>\r\n        <!-- /ko -->\r\n        <!-- ko if: state() === "completed" -->\r\n        <div style="position:absolute; top:-0.5em; line-height: 1em; right:15px;">\r\n            <span style="color: green; font-family: wingdings; font-size: 200%;">&#252;</span><!-- &#251; -->\r\n        </div>\r\n        <!-- /ko -->\r\n        <!-- ko template: "algorithm-block-controls" -->\r\n        <!-- /ko -->\r\n    </div>\r\n</script>\r\n\r\n<script type="text/html" id="algorithm-block-condition-template">\r\n    <div class="algorithm-block algorithm-block-condition" data-bind="style: { \'height\': height() + \'px\', \'lineHeight\': height() + \'px\', \'margin\': $parent.blockMinDistance() + \'px 0\' }, click: function() { $parent.clickBlock($data); }">\r\n        <div class="algorithm-block-shadow">\r\n            <svg width=\'100%\' height=\'100%\' style="position:absolute;left:0;">\r\n                <defs>\r\n                    <filter id="algorithm-block-shadow-filter" x="-0.5" y="-0.5" width="200%" height="200%">\r\n                        <feOffset result="offOut" in="SourceAlpha" dx="0" dy="0" />\r\n                        <feGaussianBlur result="blurOut" in="offOut" stdDeviation="0.1" />\r\n                        <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />\r\n                    </filter>\r\n                </defs>\r\n                <polygon data-bind="attr: { \'points\': \'0 \' + height()/2 + \', \' + $parent.blockWidth()/2 + \' 0, \' + $parent.blockWidth() + \' \' + height()/2 + \', \' + $parent.blockWidth()/2 + \' \' + height() }" style="stroke:gray;stroke-width:1" filter="url(#algorithm-block-shadow-filter)" />\r\n            </svg>\r\n        </div>\r\n        <svg height="100%" width="100%" style="position:absolute;left:0;">\r\n            <polygon data-bind="attr: { \'points\': \'0 \' + height()/2 + \', \' + $parent.blockWidth()/2 + \' 0, \' + $parent.blockWidth() + \' \' + height()/2 + \', \' + $parent.blockWidth()/2 + \' \' + height() }" style="fill:white;stroke:black;stroke-width:1" />\r\n        </svg>\r\n        <div class="algorithm-condition-content" data-bind="style: { \'lineHeight\': height() + \'px\' }, text: text"></div>\r\n        <!-- ko if: num() -->\r\n        <div class="algorithm-block-num" data-bind="text: num"></div>\r\n        <!-- /ko -->\r\n        <!-- ko template: "algorithm-block-controls" -->\r\n        <!-- /ko -->\r\n    </div>\r\n</script>\r\n\r\n<script type="text/html" id="algorithm-block-controls">\r\n    <!-- ko if: $parent.allowEdit -->\r\n    <div class="algorithm-block-controls">\r\n        <div class="algorithm-block-command algorithm-hint algorithm-block-command-add" data-bind="click: function() { $parent.addBlock($data, true); }, attr: { \'data-title\': $parent.addBeforeTitle }"></div>\r\n        <div class="algorithm-block-command algorithm-hint algorithm-block-command-edit" data-bind="click: function() { $parent.editBlock($data); }, attr: { \'data-title\': $parent.editTitle }"></div>\r\n        <div class="algorithm-block-command algorithm-hint algorithm-block-command-connect" draggable="true" data-bind="attr: { \'data-title\': $parent.connectTitle }"></div>\r\n        <!-- ko if: $parent.blocks().length > 1 -->\r\n        <div class="algorithm-block-command algorithm-hint algorithm-block-command-remove" data-bind="click: function() { $parent.removeBlock($data); }, attr: { \'data-title\': $parent.removeTitle }"></div>\r\n        <!-- /ko -->\r\n        <div class="algorithm-block-command algorithm-hint algorithm-block-command-add" data-bind="click: function() { $parent.addBlock($data); }, attr: { \'data-title\': $parent.addAfterTitle }"></div>\r\n    </div>\r\n    <div class="algorithm-condition-connector algorithm-condition-connector-no algorithm-hint" draggable="true" data-bind="style: { \'top\': height()/2-8 + \'px\' }, attr: { \'data-title\': $parent.noTitle, \'data-transition\': $parent.noTitle }"></div>\r\n    <!-- /ko -->\r\n</script>\r\n'},function(t,i){t.exports='<script type="text/html" id="algorithm-tr-direct-template">\r\n    <div style="width:1px; border:1px solid black; border-right:none; position:absolute;" data-bind="style: { top: startBlock().posY() + startBlock().height() + \'px\', height: $parent.blockMinDistance() + \'px\', left: $parent.connectorsAreaWidth() + $parent.blockWidth() / 2 + \'px\' }">\r\n        <!-- ko if: label() -->\r\n        <div style="position:absolute; top:-2px; left:6px; background-color: white;" data-bind="text: label"></div>\r\n        <!-- /ko -->\r\n    </div>\r\n</script>\r\n\r\n<script type="text/html" id="algorithm-tr-far-up-template">\r\n    <div style="border:1px solid black; border-right:none; border-radius: 5px 0 0 5px; position:absolute;" data-bind="style: { top: (endBlock().posY() - $parent.blockMinDistance() / 2 - 1) + \'px\', height: (startBlock().posY() - endBlock().posY() + $parent.blockMinDistance() / 2 + startBlock().height() / 2 + 1) + \'px\', left: ($parent.connectorsAreaWidth() - level() * $parent.blockMinDistance()) + \'px\', width: level() * $parent.blockMinDistance() + $parent.blockWidth() / 2 + \'px\' }">\r\n        <div class="connector-far-up-arrow">\r\n            <svg width="100%" height="100%">\r\n                <line y1="25%" y2="50%" x1="50%" x2="100%" style="stroke:black;stroke-width:1"></line>\r\n                <line y1="75%" y2="50%" x1="50%" x2="100%" style="stroke:black;stroke-width:1"></line>\r\n            </svg>\r\n        </div>\r\n        <div class="connector-far-up-arrow-to-block" style="border-right: 1px solid black; position: absolute; top: -1px; right: -1px; height: 10px;"></div>\r\n        <!-- ko if: label() -->\r\n        <div class="connector-label" data-bind="text: label"></div>\r\n        <!-- /ko -->\r\n    </div>\r\n</script>\r\n\r\n<script type="text/html" id="algorithm-tr-far-down-template">\r\n    <div style="border:1px solid black; border-right:none; border-radius: 5px 0 0 5px; position:absolute;" data-bind="style: { top: (startBlock().posY() + startBlock().height() / 2) + \'px\', height: (endBlock().posY() - startBlock().posY() - $parent.blockMinDistance() / 2 - endBlock().height() / 2) + \'px\', left: ($parent.connectorsAreaWidth() - level() * $parent.blockMinDistance()) + \'px\', width: level() * $parent.blockMinDistance() + $parent.blockWidth() / 2 + \'px\' }">\r\n        <div class="connector-far-down-arrow">\r\n            <svg width="100%" height="100%">\r\n                <line y1="25%" y2="50%" x1="50%" x2="100%" style="stroke:black;stroke-width:1"></line>\r\n                <line y1="75%" y2="50%" x1="50%" x2="100%" style="stroke:black;stroke-width:1"></line>\r\n            </svg>\r\n        </div>\r\n        <div class="connector-far-down-arrow-to-block" style="border-right: 1px solid black; position: absolute; bottom: -11px; right: -1px; height: 11px;"></div>\r\n        <!-- ko if: label() -->\r\n        <div class="connector-label" data-bind="text: label"></div>\r\n        <!-- /ko -->\r\n    </div>\r\n</script>\r\n'},function(t,i,n){"use strict";var e,o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var n in i)i.hasOwnProperty(n)&&(t[n]=i[n])};return function(i,n){function e(){this.constructor=i}t(i,n),i.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}}(),r=n(0),a=n(1);!function(t){var i=function(){function t(t){var i=this;this._MaxId=-1,this.blocks=a.observableArray(),this.transitions=a.observableArray(),this.maxLevel=a.observable(1),this.blockMinDistance=a.observable(20),this.addonsTemplate=a.observable(),this.addonsWidth=a.computed(function(){return i.addonsTemplate()?.2*i.containerWidth():0}),this.connectorsAreaWidth=a.computed(function(){return i.maxLevel()*i.blockMinDistance()}),this.containerWidth=a.observable(500),this.blockWidth=a.computed(function(){return.6*(i.containerWidth()-i.connectorsAreaWidth()-i.addonsWidth())}),this.commentWidth=a.computed(function(){return i.containerWidth()-i.blockWidth()-i.connectorsAreaWidth()-i.addonsWidth()}),this.currentBlock=a.observable(),this.detailTemplate="algorithm-default-details-template",this.isEditMode=a.observable(!1),this.allowEdit=!0,this._blockMappings=r.extend(!0,{},{id:"id",text:"text",comment:"comment",num:"num",state:"state",detailTemplate:"algorithm-default-details-template",new:function(t){return{id:t}},change:function(t,i){},click:function(t){},customEdit:function(t){}},t.blockMappings),this.detailTemplate=this._blockMappings.detailTemplate,this.addonsTemplate(t.addonsTemplate),this._transitionMappings=r.extend(!0,{},{iid:"iid",exit1:"exit1",exit2:"exit2",new:function(t){return{}},change:function(t,i){}},t.transitionMappings),this.allowEdit=t.allowEdit!==!1,t.items.forEach(function(t){var n=new e(t,i._blockMappings);n.id()>i._MaxId&&(i._MaxId=n.id()),i.blocks.push(n)}),t.transitions.forEach(function(t){if(a.unwrap(t[i._transitionMappings.exit1])&&i.transitions.push(new l(i.findBlock(a.unwrap(t[i._transitionMappings.iid])),i.findBlock(a.unwrap(t[i._transitionMappings.exit1])),t,i._transitionMappings)),a.unwrap(t[i._transitionMappings.exit2])){var n=new l(i.findBlock(a.unwrap(t[i._transitionMappings.iid])),i.findBlock(a.unwrap(t[i._transitionMappings.exit2])),t,i._transitionMappings);n.label(i.noTitle),i.transitions.push(n)}}),this._sortBlocks(),this._updateLayout(),this.blocks.subscribe(function(t){t.forEach(function(t){return i._blockMappings.change(t.status,t.value)})},null,"arrayChange"),this.transitions.subscribe(function(t){t.forEach(function(t){return i._transitionMappings.change(t.status,t.value)})},null,"arrayChange"),this.isEditMode.subscribe(function(t){t||i._blockMappings.change("edit",i.currentBlock())})}return t.prototype._collectFollowingBlocks=function(t,i,n){var e=this;void 0===n&&(n=[]);var o=this.blocks().filter(i),r=n.concat(o);o.forEach(function(i){var o=0!==e._findTransitionsTo(i).filter(function(t){return n.indexOf(t.startBlock())!==-1}).length;if(t.indexOf(i)===-1&&!o){for(t.push(i);r.indexOf(i)!==-1;)r.splice(r.indexOf(i),1);e._collectFollowingBlocks(t,function(t){return 0!==e._findTransitionsTo(t).filter(function(t){return t.startBlock()===i}).length},r)}})},t.prototype._sortBlocks=function(){var t=this,i=[];this._collectFollowingBlocks(i,function(i){return 0===t._findTransitionsTo(i).length}),this.blocks(i)},t.prototype._findTransitionsFrom=function(t){return this.transitions().filter(function(i){return i.startBlock()===t})},t.prototype._findTransitionsTo=function(t){return this.transitions().filter(function(i){return i.endBlock()===t})},t.prototype._isFitToLayoutLine=function(t,i){var n=!0;return t.forEach(function(t){n&&(n=t.start>i.start?i.start+i.length<=t.start:t.start+t.length<=i.start)}),n},t.prototype._prepareTransitions=function(){var t=this,i=[],n=[];this.transitions().forEach(function(e){if(e.startBlock()===e.endBlock())n.push(e);else{e.level(1);var o=t.blocks().indexOf(e.startBlock()),r=t.blocks().indexOf(e.endBlock());r-o===1?e.type("direct"):(e.type("far"),r>o?(e.direction("down"),i.push({transition:e,start:o,length:r-o})):(e.direction("up"),i.push({transition:e,start:r,length:o-r})))}}),n.forEach(function(i){t.transitions.remove(i)}),i.sort(function(t,i){return t.length-i.length});for(var e=[];i.length>0;){var o=!1;e.forEach(function(n,e){if(!o&&t._isFitToLayoutLine(n,i[0])){var r=i.splice(0,1)[0];r.transition.level(e+1),n.push(r),o=!0}}),o||e.push([])}this.maxLevel(e.length+1)},t.prototype._updateLayout=function(){var t=this;this.blocks().reduce(function(i,n){var e=0===t._findTransitionsTo(n).length,o=0===t._findTransitionsFrom(n).length;return n.isTerminator(e||o),n.isCondition(0!==t._findTransitionsFrom(n).filter(function(i){return i.label()===t.noTitle}).length),n.posY(i),i+n.height()+t.blockMinDistance()},0),this._prepareTransitions()},Object.defineProperty(t.prototype,"model",{get:function(){var t={items:[],transitions:[]};return this.blocks().forEach(function(i){return t.items.push(i.item)}),this.transitions().forEach(function(i){return t.transitions.push(i.transition)}),t},enumerable:!0,configurable:!0}),t.prototype.findBlock=function(t){return this.blocks().filter(function(i){return i.id()===t})[0]},t.prototype.addBlock=function(t,i){var n=this;void 0===i&&(i=!1);var o=new e(this._blockMappings.new(++this._MaxId),this._blockMappings);this.blocks.splice(this.blocks().indexOf(t)+(i?0:1),0,o),i?(this._findTransitionsTo(t).forEach(function(t){t.endBlock(o),n._transitionMappings.change("edit",t)}),this.transitions.push(new l(o,t,this._transitionMappings.new(++this._MaxId),this._transitionMappings))):(this._findTransitionsFrom(t).forEach(function(t){t.startBlock(o),n._transitionMappings.change("edit",t)}),this.transitions.push(new l(t,o,this._transitionMappings.new(++this._MaxId),this._transitionMappings))),this._updateLayout()},t.prototype.removeBlock=function(t){var i=this;this._findTransitionsTo(t).forEach(function(n){i._findTransitionsFrom(t).forEach(function(t){n.endBlock(t.endBlock()),i._transitionMappings.change("edit",n)})}),this._findTransitionsFrom(t).forEach(function(t){i.transitions.remove(t)}),this.blocks.remove(t),this._updateLayout()},t.prototype.editBlock=function(t){this.currentBlock(t),this._blockMappings.customEdit(t)||this.isEditMode(!this.isEditMode())},t.prototype.clickBlock=function(t){this._blockMappings.click(t)},t.prototype.updateTransition=function(t,i,n,e){void 0===e&&(e=!1);var o=this._findTransitionsFrom(t).filter(function(t){return t.label()===n});if(e){if(0===o.filter(function(t){return t.endBlock()===i}).length){var r=new l(t,i,this._transitionMappings.new(++this._MaxId),this._transitionMappings);r.label(n),this.transitions.push(r)}}else if(0===o.length){var r=new l(t,i,this._transitionMappings.new(++this._MaxId),this._transitionMappings);r.label(n),this.transitions.push(r)}else{o[0].endBlock(i),this._transitionMappings.change("edit",o[0]);for(var a=1;a<o.length;a++)this.transitions.remove(o[a])}this._updateLayout()},Object.defineProperty(t.prototype,"addBeforeTitle",{get:function(){return t.addBeforeTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"addAfterTitle",{get:function(){return t.addAfterTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"editTitle",{get:function(){return t.titleEdit},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"removeTitle",{get:function(){return t.titleRemove},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"connectTitle",{get:function(){return t.connectTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"yesTitle",{get:function(){return t.yesTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"noTitle",{get:function(){return t.noTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"closeTitle",{get:function(){return t.closeTitle},enumerable:!0,configurable:!0}),t}();i.yesTitle="yes",i.noTitle="no",i.addBeforeTitle="Add block before",i.addAfterTitle="Add block after",i.titleEdit="Edit block",i.titleRemove="Remove block",i.connectTitle="Drag to connect to...",i.closeTitle="Close",t.AlgorithmViewModel=i;var n=function(){function t(t,i){var n=this;this._mappings=r.extend({},i),this._item=t,r.each(this._mappings,function(t,i){var e="_"+t;n[e]=a.isObservable(n._item[i])?n._item[i]:a.observable(n._item[i]),n[t]=a.computed({read:function(){return n[e]()},write:function(t){n[e](t),a.isObservable(n._item[i])||(n._item[i]=t)}})})}return Object.defineProperty(t.prototype,"item",{get:function(){return this._item},enumerable:!0,configurable:!0}),t}();t.ItemHolder=n;var e=function(t){function i(i,n){var e=t.call(this,i,n||{id:"id",text:"text",comment:"comment",num:"num",state:"state"})||this;return e.isTerminator=a.observable(!1),e.isCondition=a.observable(!1),e.template=a.computed(function(){return e.isCondition()?"algorithm-block-condition-template":"algorithm-block-item-template"}),e.height=a.observable(50),e.posY=a.observable(0),e}return o(i,t),i}(n);t.AlgorithmItemBlockModel=e;var l=function(t){function n(i,n,e,o){var r=t.call(this,e,o||{iid:"iid",exit1:"exit1",exit2:"exit2"})||this;return r.startBlock=a.observable(),r.endBlock=a.observable(),r.type=a.observable("direct"),r.direction=a.observable("down"),r.level=a.observable(1),r.label=a.observable(),r.template=a.computed(function(){return"direct"!==r.type()?"down"===r.direction()?"algorithm-tr-far-down-template":"algorithm-tr-far-up-template":"algorithm-tr-direct-template"}),r.startBlock(i),r.endBlock(n),r}return o(n,t),Object.defineProperty(n.prototype,"transition",{get:function(){return this.label()!==i.noTitle?{iid:this.startBlock().id(),exit1:this.endBlock().id(),exit2:void 0}:{iid:this.startBlock().id(),exit1:void 0,exit2:this.endBlock().id()}},enumerable:!0,configurable:!0}),n}(n);t.AlgorithmTransition=l}(e||(e={})),t.exports=e},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e=n(0),o=n(1);n(2);var r,a=n(3),l=n(4),s=n(5),c=n(6);!function(t){function i(t){var i=document.createDocumentFragment(),n=document.createElement("div");for(n.innerHTML=t;n.firstChild;)i.appendChild(n.firstChild);return i}t.createFragment=i,document.body.insertBefore(i(a),document.body.childNodes[0]),document.body.insertBefore(i(l),document.body.childNodes[0]),document.body.insertBefore(i(s),document.body.childNodes[0]),o.bindingHandlers.algorithm={init:function(t,i,n,r,a){var l,s=o.unwrap(i()),d=e("#algorithm-view-template"),p=(o.observable(500),o.observable(new c.AlgorithmViewModel(o.unwrap(s.value)))),h=a.createChildContext(p);o.isSubscribable(s.value)&&(l=s.value.subscribe(function(t){return p(new c.AlgorithmViewModel(t))})),e(t).children().remove(),e(t).append(e(d.text())),o.applyBindingsToDescendants(h,t);var u=setInterval(function(){p().containerWidth(e(t).find(".algorithm-view-holder").width())},500);return o.utils.domNodeDisposal.addDisposeCallback(t,function(){clearInterval(u),l&&l.dispose()}),{controlsDescendantBindings:!0}},update:function(t,i,n,e,o){}},o.bindingHandlers.algodetails={init:function(t,i,n,r,a){var l=o.unwrap(i()),s=e(t),c=e("#algorithm-details-template"),d=a.createChildContext(l);e(t).children().remove(),e(t).append(e(c.text()));var p=l.isEditMode.subscribe(function(t){var i={top:l.currentBlock().posY()+"px",left:l.connectorsAreaWidth()+"px",height:l.currentBlock().height()+"px",width:l.blockWidth()+"px"};t?(s.css(i),s.show(),s.animate({top:"-="+(l.currentBlock().posY()>200?200:l.currentBlock().posY())+"px",left:"0",height:"+=400px",width:"100%"})):s.animate(i,{complete:function(){s.hide()}})});return o.utils.domNodeDisposal.addDisposeCallback(t,function(){p.dispose()}),o.applyBindingsToDescendants(d,t),{controlsDescendantBindings:!0}}},o.bindingHandlers.draggableblocks={init:function(t,i,n,r,a){var l=o.unwrap(i()),s=e(t),d={dragstart:function(t){var i=t.originalEvent,n=o.dataFor(i.target);if(n instanceof c.AlgorithmItemBlockModel){var r=e(t.target).attr("data-transition");return i.dataTransfer.effectAllowed="link",i.dataTransfer.setData("text",JSON.stringify({type:"AlgorithmItemBlockModel",id:n.id(),transitionType:r})),!0}},dragover:function(t){o.dataFor(t.target)instanceof c.AlgorithmItemBlockModel&&t.preventDefault()},drop:function(t){var i=t.originalEvent,n=o.dataFor(i.target);if(n instanceof c.AlgorithmItemBlockModel){var e=i.dataTransfer.getData("text");try{var r=JSON.parse(e);if("AlgorithmItemBlockModel"===r.type){var a=l.findBlock(r.id);a&&n&&(l.updateTransition(a,n,r.transitionType,t.ctrlKey),t.stopPropagation())}}catch(t){}}}};s.bind(d)}}}(r||(r={}))}])});